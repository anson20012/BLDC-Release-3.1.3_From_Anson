<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\bldc_keil.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\bldc_keil.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Thu Mar 28 15:38:35 2019
<BR><P>
<H3>Maximum Stack Usage =         88 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ADC_IRQHandler &rArr; control_state_machine &rArr; sim_process &rArr; sim_into_bemf_mode &rArr; fix16_mul_new_16_16
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[35]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">EMUX_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">EMUX_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[17]">ADC_IRQHandler</a> from isr_adc.o(i.ADC_IRQHandler) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[1c]">EMUX_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[d]">GpioA_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[e]">GpioB_IRQHandler</a> from isr_gpio.o(i.GpioB_IRQHandler) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[f]">GpioC_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[10]">GpioD_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[11]">GpioE_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[1b]">I2C_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[a]">MemCtl_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[1d]">RTC_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[19]">SPIB_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[18]">SocBridge_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[b]">SysClk_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from isr_systick.o(i.SysTick_Handler) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[1e]">SystemInit</a> from system_pac5xxx.o(i.SystemInit) referenced from startup_pac5xxx_keil.o(.text)
 <LI><a href="#[13]">TimerAExt_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[12]">TimerA_IRQHandler</a> from isr_timera.o(ramfunc) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[14]">TimerB_IRQHandler</a> from isr_timerb.o(i.TimerB_IRQHandler) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[15]">TimerC_IRQHandler</a> from isr_timerc.o(ramfunc) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[16]">TimerD_IRQHandler</a> from isr_timerd.o(ramfunc) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[1a]">UART_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[c]">Wdt_IRQHandler</a> from startup_pac5xxx_keil.o(.text) referenced from startup_pac5xxx_keil.o(RESET)
 <LI><a href="#[20]">__main</a> from __main.o(!!!main) referenced from startup_pac5xxx_keil.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[21]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[23]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[8c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[8d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[24]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[28]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[8f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[90]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[91]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[92]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[93]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[94]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[95]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[96]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[97]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[98]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[99]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[2d]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[a5]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[a6]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[a7]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[a8]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[22]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[ab]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[25]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[27]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[ac]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[29]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; peripheral_init &rArr; pac5xxx_dtg_config &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ad]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[37]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2c]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[ae]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2e]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>

<P><STRONG><a name="[31]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[32]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EMUX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMUX_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMUX_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>GpioA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GpioC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GpioD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GpioE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>MemCtl_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPIB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SocBridge_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysClk_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TimerAExt_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>UART_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Wdt_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pac5xxx_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_pac5xxx_keil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[af]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2b]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b2]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b3]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[b4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>ADC_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, isr_adc.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ADC_IRQHandler &rArr; control_state_machine &rArr; sim_process &rArr; sim_into_bemf_mode &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dac_debug_variable_to_fix16
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_send_data_set_out_using_pwm
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_ibus_current
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GpioB_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, isr_gpio.o(i.GpioB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GpioB_IRQHandler &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_gpio_int_flag_clear_b
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, isr_systick.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SysTick_Handler &rArr; main_state_machine &rArr; square_wave_start_up_process &rArr; ready_for_bemf_mode &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbus_voltage_Max_Min_protect
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lose_angle_no_commutate_check
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_vbus_voltage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_pac5xxx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>TimerB_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, isr_timerb.o(i.TimerB_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, align_and_go_process.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_cctrl_config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_dtg_config
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_wave_start_up_process
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_zero_crossing_point
</UL>

<P><STRONG><a name="[45]"></a>bldc_motor_generic_ramp</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bldc_misc_functions.o(i.bldc_motor_generic_ramp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bldc_motor_generic_ramp
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_speed_ref_ramp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_iq_ref_ramp
</UL>

<P><STRONG><a name="[42]"></a>bldc_motor_init_parameters</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, bldc_misc_functions.o(i.bldc_motor_init_parameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bldc_motor_init_parameters
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>bldc_motor_iq_ref_ramp</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, bldc_misc_functions.o(i.bldc_motor_iq_ref_ramp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bldc_motor_iq_ref_ramp &rArr; bldc_motor_generic_ramp
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_generic_ramp
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[46]"></a>bldc_motor_speed_ref_ramp</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bldc_misc_functions.o(i.bldc_motor_speed_ref_ramp))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bldc_motor_speed_ref_ramp &rArr; HertzToTicks &rArr; fix16_div
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HertzToTicks
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_generic_ramp
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[48]"></a>cafe_init</STRONG> (Thumb, 242 bytes, Stack size 8 bytes, pac523x_init.o(i.cafe_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cafe_init &rArr; pac5xxx_tile_socbridge_config &rArr; pac5xxx_socbridge_config_chip_select
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_socbridge_config
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_read
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_amplifier_gain_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_over_current_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>control_state_machine</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, control_state_machine.o(i.control_state_machine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = control_state_machine &rArr; sim_process &rArr; sim_into_bemf_mode &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_run
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_reset
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_duty
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_control
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>debug_dac_init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, debug_dac.o(i.debug_dac_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = debug_dac_init &rArr; pac5xxx_timer_cctrl_config &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_clock_config
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_cctrl_config
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_base_config
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>init_SysTick_time_base</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, isr_systick.o(i.init_SysTick_time_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_SysTick_time_base
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>init_over_current_limit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pac523x_app.o(i.init_over_current_limit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_over_current_limit
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_param_fill
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cafe_init
</UL>

<P><STRONG><a name="[40]"></a>lose_angle_no_commutate_check</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, motor_protect_check.o(i.lose_angle_no_commutate_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lose_angle_no_commutate_check &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2a]"></a>main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = main &rArr; peripheral_init &rArr; pac5xxx_dtg_config &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_param_fill
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_SysTick_time_base
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_dac_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cafe_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_init_parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[41]"></a>main_state_machine</STRONG> (Thumb, 418 bytes, Stack size 32 bytes, main_state_machine.o(i.main_state_machine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = main_state_machine &rArr; square_wave_start_up_process &rArr; ready_for_bemf_mode &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_wave_start_up_process
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HertzToTicks
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop_state_reset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_speed_ref_ramp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_iq_ref_ramp
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5b]"></a>motor_stop_state_reset</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, bldc_misc_functions.o(i.motor_stop_state_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = motor_stop_state_reset &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_reset
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[77]"></a>pac5xxx_adc_as0_config_pwm</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, pac5xxx_driver_adc_seq.o(i.pac5xxx_adc_as0_config_pwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pac5xxx_adc_as0_config_pwm
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[78]"></a>pac5xxx_adc_as0_sequence_config</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, pac5xxx_driver_adc_seq.o(i.pac5xxx_adc_as0_sequence_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pac5xxx_adc_as0_sequence_config
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[75]"></a>pac5xxx_adc_config</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, pac5xxx_driver_adc_config.o(i.pac5xxx_adc_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pac5xxx_adc_config
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[74]"></a>pac5xxx_adc_config_emux_io</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, pac5xxx_driver_adc_emux.o(i.pac5xxx_adc_config_emux_io))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[76]"></a>pac5xxx_adc_config_io</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, pac5xxx_driver_adc_config.o(i.pac5xxx_adc_config_io))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[73]"></a>pac5xxx_adc_emux_config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, pac5xxx_driver_adc_emux.o(i.pac5xxx_adc_emux_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pac5xxx_adc_emux_config
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[5f]"></a>pac5xxx_dtg_config</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, pac5xxx_driver_timer_dtg_config.o(i.pac5xxx_dtg_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pac5xxx_dtg_config &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[68]"></a>pac5xxx_memctl_wait_state</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pac5xxx_driver_memctl_config.o(i.pac5xxx_memctl_wait_state))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[63]"></a>pac5xxx_socbridge_config</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, pac5xxx_driver_socbridge_config.o(i.pac5xxx_socbridge_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pac5xxx_socbridge_config
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_socbridge_config
</UL>

<P><STRONG><a name="[64]"></a>pac5xxx_socbridge_config_chip_select</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, pac5xxx_driver_socbridge_config.o(i.pac5xxx_socbridge_config_chip_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pac5xxx_socbridge_config_chip_select
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_socbridge_config
</UL>

<P><STRONG><a name="[65]"></a>pac5xxx_socbridge_config_io</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, pac5xxx_driver_socbridge_config_io.o(i.pac5xxx_socbridge_config_io))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_socbridge_config
</UL>

<P><STRONG><a name="[67]"></a>pac5xxx_sys_ccs_config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, pac5xxx_driver_system_ccs_config.o(i.pac5xxx_sys_ccs_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pac5xxx_sys_ccs_config
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[60]"></a>pac5xxx_sys_pll_config</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, pac5xxx_driver_system_pll_config_mhz.o(i.pac5xxx_sys_pll_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pac5xxx_sys_pll_config &rArr; pac5xxx_sys_pll_config_dividers
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_sys_pll_enable
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_sys_pll_config_dividers
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[61]"></a>pac5xxx_sys_pll_config_dividers</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, pac5xxx_driver_system_pll_config.o(i.pac5xxx_sys_pll_config_dividers))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pac5xxx_sys_pll_config_dividers
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_sys_pll_config
</UL>

<P><STRONG><a name="[62]"></a>pac5xxx_sys_pll_enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, pac5xxx_driver_system_pll_config.o(i.pac5xxx_sys_pll_enable))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_sys_pll_config
</UL>

<P><STRONG><a name="[4a]"></a>pac5xxx_tile_register_read</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pac5xxx_driver_tile_socbridge.o(i.pac5xxx_tile_register_read))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oc_reset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cafe_init
</UL>

<P><STRONG><a name="[4b]"></a>pac5xxx_tile_register_write</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pac5xxx_driver_tile_socbridge.o(i.pac5xxx_tile_register_write))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oc_reset
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_amplifier_gain_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_over_current_limit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cafe_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;braking_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ready_for_bemf_mode
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerD_IRQHandler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_into_bemf_mode
</UL>

<P><STRONG><a name="[49]"></a>pac5xxx_tile_socbridge_config</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pac5xxx_driver_tile_socbridge_config.o(i.pac5xxx_tile_socbridge_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pac5xxx_tile_socbridge_config &rArr; pac5xxx_socbridge_config_chip_select
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_socbridge_config_io
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_socbridge_config_chip_select
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_socbridge_config
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cafe_init
</UL>

<P><STRONG><a name="[55]"></a>pac5xxx_timer_base_config</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, pac5xxx_driver_timer_base_config.o(i.pac5xxx_timer_base_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pac5xxx_timer_base_config
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_param_fill
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_dac_init
</UL>

<P><STRONG><a name="[6b]"></a>pac5xxx_timer_base_int_enable</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, pac5xxx_driver_timer_base_int_enable.o(i.pac5xxx_timer_base_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pac5xxx_timer_base_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_wave_start_up_process
</UL>

<P><STRONG><a name="[56]"></a>pac5xxx_timer_cctrl_config</STRONG> (Thumb, 202 bytes, Stack size 12 bytes, pac5xxx_driver_timer_cctrl_config.o(i.pac5xxx_timer_cctrl_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pac5xxx_timer_cctrl_config &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_param_fill
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_dac_init
</UL>

<P><STRONG><a name="[54]"></a>pac5xxx_timer_clock_config</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, pac5xxx_driver_timer_clock_config.o(i.pac5xxx_timer_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pac5xxx_timer_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_dac_init
</UL>

<P><STRONG><a name="[6f]"></a>pac5xxx_uart_config_LCR</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, pac5xxx_driver_uart_config.o(i.pac5xxx_uart_config_LCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pac5xxx_uart_config_LCR
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[70]"></a>pac5xxx_uart_config_divisor_latch</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pac5xxx_driver_uart_config.o(i.pac5xxx_uart_config_divisor_latch))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[71]"></a>pac5xxx_uart_config_fractional_divisor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pac5xxx_driver_uart_config.o(i.pac5xxx_uart_config_fractional_divisor))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[6e]"></a>pac5xxx_uart_io_config</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, pac5xxx_driver_uart_config.o(i.pac5xxx_uart_io_config))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[59]"></a>peripheral_init</STRONG> (Thumb, 686 bytes, Stack size 24 bytes, pac523x_init.o(i.peripheral_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = peripheral_init &rArr; pac5xxx_dtg_config &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_fault
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_uart_io_config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_uart_config_fractional_divisor
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_uart_config_divisor_latch
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_uart_config_LCR
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_clock_config
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_cctrl_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_base_int_enable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_base_config
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_socbridge_config
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_sys_pll_config
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_sys_ccs_config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_memctl_wait_state
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_dtg_config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_adc_emux_config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_adc_config_io
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_adc_config_emux_io
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_adc_config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_adc_as0_sequence_config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_adc_as0_config_pwm
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_gpio_int_mask_b
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_adc_enable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>ready_for_bemf_mode</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, align_and_go_process.o(i.ready_for_bemf_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ready_for_bemf_mode &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_wave_start_up_process
</UL>

<P><STRONG><a name="[66]"></a>set_fault</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bldc_misc_functions.o(i.set_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_fault &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[5c]"></a>square_wave_start_up_process</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, align_and_go_process.o(i.square_wave_start_up_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = square_wave_start_up_process &rArr; ready_for_bemf_mode &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_reset
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_base_int_enable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commutate
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ready_for_bemf_mode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HertzToTicks
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
</UL>

<P><STRONG><a name="[5a]"></a>user_param_fill</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, user_parameter.o(i.user_param_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = user_param_fill &rArr; pac5xxx_timer_cctrl_config &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_div
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_cctrl_config
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_timer_base_config
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_amplifier_gain_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_over_current_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>vbus_voltage_Max_Min_protect</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, motor_protect_check.o(i.vbus_voltage_Max_Min_protect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vbus_voltage_Max_Min_protect &rArr; pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[38]"></a>calculate_ibus_current</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pac523x_app.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = calculate_ibus_current &rArr; digital_low_pass_filter_for_Iq &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_curent_adc_value
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digital_low_pass_filter_for_Iq
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[3e]"></a>calculate_vbus_voltage</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, pac523x_app.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = calculate_vbus_voltage &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[51]"></a>set_duty</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pac523x_app.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
</UL>

<P><STRONG><a name="[b7]"></a>sine_start_up_set_duty</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pac523x_app.o(ramfunc), UNUSED)

<P><STRONG><a name="[7b]"></a>commutate</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, pac523x_app.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_wave_start_up_process
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerD_IRQHandler
</UL>

<P><STRONG><a name="[4c]"></a>app_amplifier_gain_init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, pac523x_app.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_amplifier_gain_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_param_fill
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cafe_init
</UL>

<P><STRONG><a name="[7f]"></a>oc_reset</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, pac523x_app.o(ramfunc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_read
</UL>

<P><STRONG><a name="[3c]"></a>pwm_disable</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, pac523x_app.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioB_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbus_voltage_Max_Min_protect
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lose_angle_no_commutate_check
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_fault
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop_state_reset
</UL>

<P><STRONG><a name="[87]"></a>sim_variable_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sim_config.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[88]"></a>sim_bemf_adc_read</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sim_config.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[5d]"></a>fix16_mul_new_16_16</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, fix16.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_send_data_set_out_using_pwm
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digital_low_pass_filter_for_Iq
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_vbus_voltage
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_ibus_current
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ready_for_bemf_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HertzToTicks
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop_state_reset
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerD_IRQHandler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_zero_crossing_point
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_into_bemf_mode
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_mos_state_and_pwm_duty
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_detect_bemf_position
</UL>

<P><STRONG><a name="[7c]"></a>fix16_div</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, fix16.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fix16_div
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_send_data_set_out_using_pwm
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_param_fill
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HertzToTicks
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_mos_state_and_pwm_duty
</UL>

<P><STRONG><a name="[43]"></a>pid_reset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pid.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_init_parameters
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_wave_start_up_process
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop_state_reset
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_into_bemf_mode
</UL>

<P><STRONG><a name="[4f]"></a>pid_run</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, pid.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pid_run &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
</UL>

<P><STRONG><a name="[b8]"></a>pid_sync</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pid.o(ramfunc), UNUSED)

<P><STRONG><a name="[12]"></a>TimerA_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, isr_timera.o(ramfunc))
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TimerC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isr_timerc.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TimerC_IRQHandler &rArr; get_zero_crossing_point &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_zero_crossing_point
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TimerD_IRQHandler</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, isr_timerd.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TimerD_IRQHandler &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commutate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pac5xxx_keil.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>pwm_duty_control</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, bldc_misc_functions.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
</UL>

<P><STRONG><a name="[7e]"></a>digital_low_pass_filter_for_Iq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bldc_misc_functions.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = digital_low_pass_filter_for_Iq &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_ibus_current
</UL>

<P><STRONG><a name="[47]"></a>HertzToTicks</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bldc_misc_functions.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HertzToTicks &rArr; fix16_div
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_div
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_machine
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_wave_start_up_process
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bldc_motor_speed_ref_ramp
</UL>

<P><STRONG><a name="[7d]"></a>get_curent_adc_value</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bldc_misc_functions.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_ibus_current
</UL>

<P><STRONG><a name="[b9]"></a>adc_get_rotor_position</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, get_zero_cross_point.o(ramfunc), UNUSED)

<P><STRONG><a name="[80]"></a>get_zero_crossing_point</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, get_zero_cross_point.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_zero_crossing_point &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerC_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>braking_init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, braking_control.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = braking_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[83]"></a>braking_PWM_control</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, braking_control.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;braking_charge_vbus_control
</UL>

<P><STRONG><a name="[82]"></a>braking_charge_vbus_control</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, braking_control.o(ramfunc))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;braking_PWM_control
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[8b]"></a>braking_detect_motor_state</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, braking_control.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = braking_detect_motor_state
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[3a]"></a>pwm_dac_debug_variable_to_fix16</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, debug_dac.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[3b]"></a>bldc_send_data_set_out_using_pwm</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, debug_dac.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bldc_send_data_set_out_using_pwm &rArr; fix16_div
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_div
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>sim_detect_move_or_stop</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, sim.o(ramfunc))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[84]"></a>sim_detect_bemf_position</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, sim.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sim_detect_bemf_position &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[8a]"></a>sim_detect_direction</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, sim.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sim_detect_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[85]"></a>sim_mos_state_and_pwm_duty</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, sim.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sim_mos_state_and_pwm_duty &rArr; fix16_div
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_div
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[86]"></a>sim_into_bemf_mode</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, sim.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sim_into_bemf_mode &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_reset
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac5xxx_tile_register_write
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix16_mul_new_16_16
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_process
</UL>

<P><STRONG><a name="[52]"></a>sim_process</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, sim.o(ramfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sim_process &rArr; sim_into_bemf_mode &rArr; fix16_mul_new_16_16
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_bemf_adc_read
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_variable_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;braking_detect_motor_state
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;braking_charge_vbus_control
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;braking_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_into_bemf_mode
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_mos_state_and_pwm_duty
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_detect_direction
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_detect_bemf_position
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_detect_move_or_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_state_machine
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6c]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pac523x_init.o(i.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[6a]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pac523x_init.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[69]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, pac523x_init.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[72]"></a>pac5xxx_adc_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pac523x_init.o(i.pac5xxx_adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[6d]"></a>pac5xxx_gpio_int_mask_b</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pac523x_init.o(i.pac5xxx_gpio_int_mask_b))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_init
</UL>

<P><STRONG><a name="[3d]"></a>pac5xxx_gpio_int_flag_clear_b</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr_gpio.o(i.pac5xxx_gpio_int_flag_clear_b))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioB_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, isr_systick.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_SysTick_time_base
</UL>

<P><STRONG><a name="[5e]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bldc_misc_functions.o(i.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop_state_reset
</UL>

<P><STRONG><a name="[7a]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, align_and_go_process.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_wave_start_up_process
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ready_for_bemf_mode
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[36]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
